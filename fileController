package com.file.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import com.file.ServiceInterface.serviceInterface;

@RestController
public class fileController {
	
	@Autowired
	private serviceInterface service;
	
	@PostMapping(value = "/uploadFile")
	public ResponseEntity<String>uploadFile(@RequestParam("file")MultipartFile file)
	{	
		return new ResponseEntity<String>(service.uploadSingleFile(file), HttpStatus.OK);
	}
	
	@PostMapping(value = "/uploadMultipleFile")
	public ResponseEntity<String>uploadMultipleFile(@RequestParam("file")MultipartFile[] file)
	{	
		return new ResponseEntity<String>(service.uploadMultipleFile(file), HttpStatus.OK);
	}
	
	@GetMapping(value = "/downloadSingleFile")
	public ResponseEntity<org.springframework.core.io.Resource> downloadFile(){
		org.springframework.core.io.Resource resource = service.downloadSingleFile();
		
		if(resource.exists()) {
			HttpHeaders header = new HttpHeaders();
			header.add(header.CONTENT_DISPOSITION, "attchment;filename=download.png");
			return  ResponseEntity.ok()
					.headers(header)
					.contentType(org.springframework.http.MediaType.APPLICATION_OCTET_STREAM).
					body(resource);
		}
		else {
			return ResponseEntity.notFound().build();
		}
	}
	
	@PostMapping(value = "uploadFileUsingZip")
	public ResponseEntity<String>uploadMultipleFileUsingZip(@RequestParam("file")MultipartFile[] multipartFiles){
		System.out.println("controller");
		return new ResponseEntity<String>(service.uploadMultipleFileUsingZip(multipartFiles), HttpStatus.ACCEPTED);
	}
	
	
	@GetMapping(value = "downloadZipFile")
	public ResponseEntity<org.springframework.core.io.Resource> zipFile(){
		org.springframework.core.io.Resource zipFileResource = service.downloadSingleFile();
		if(zipFileResource.exists())
		{
			HttpHeaders headers = new HttpHeaders();
			headers.add(headers.CONTENT_DISPOSITION, "attchment;filename=download.zip");
			return ResponseEntity.ok().headers(headers).contentType(org.springframework.http.MediaType.APPLICATION_OCTET_STREAM).body(zipFileResource);
		}
		else {
			return ResponseEntity.notFound().build();
		}
		
	}
	
	

}
